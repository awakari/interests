syntax = "proto3";

package awakari.subscriptions;

option go_package = "./api/grpc";

import "api/grpc/common/group_logic.proto";
import "google/protobuf/timestamp.proto";

service Service {

  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Read(ReadRequest) returns (ReadResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc SearchOwn(SearchOwnRequest) returns (SearchOwnResponse);
  rpc SearchByCondition(SearchByConditionRequest) returns (SearchByConditionResponse);
}

// Create

message CreateRequest {
  string description = 1;
  bool enabled = 2;
  Condition cond = 3;
  google.protobuf.Timestamp expires = 4;
}

message Condition {
  bool not = 1;
  oneof cond {
    GroupCondition gc = 2;
    TextCondition tc = 3;
    NumberCondition nc = 4;
  }
}

message GroupCondition {
  common.GroupLogic logic = 1;
  repeated Condition group = 2;
}

message TextCondition {
  string id = 1;
  string key = 2;
  string term = 3;
  bool exact = 4;
}

message NumberCondition {
  string id = 1;
  string key = 2;
  Operation op = 3;
  double val = 4;
}

enum Operation {
  Undefined = 0;
  Gt = 1;
  Gte = 2;
  Eq = 3;
  Lte = 4;
  Lt = 5;
}

message CreateResponse {
  string id = 1;
}

// Read

message ReadRequest {
  string id = 1;
}

message ReadResponse {
  string description = 1;
  bool enabled = 2;
  Condition cond = 3;
  google.protobuf.Timestamp expires = 4;
  google.protobuf.Timestamp created = 5;
  google.protobuf.Timestamp updated = 6;
}

// Update

message UpdateRequest {
  string id = 1;
  string description = 2;
  bool enabled = 3;
  google.protobuf.Timestamp expires = 4;
  Condition cond = 5;
}

message UpdateResponse {
  Condition cond = 1;
}

// Delete

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  Condition cond = 1;
}

// SearchOwn

message SearchOwnRequest {
  string cursor = 1;
  uint32 limit = 2;
  Order order = 3;
  string Pattern = 4;
}

enum Order {
  ASC = 0;
  DESC = 1;
}

message SearchOwnResponse {
  repeated string ids = 1;
}

// ReadByCondition

message SearchByConditionRequest {
  string condId = 1;
  uint32 limit = 2;
  string cursor = 3;
}

message SearchByConditionResponse {
  repeated SearchByConditionResult page = 1;
}

message SearchByConditionResult {
  string id = 1;
  Condition cond = 2;
}
