syntax = "proto3";

package awakari.interests;

option go_package = "./api/grpc";

import "api/grpc/common/group_logic.proto";
import "google/protobuf/timestamp.proto";

service Service {

  rpc Create(CreateRequest) returns (CreateResponse);

  rpc Read(ReadRequest) returns (ReadResponse);

  rpc Update(UpdateRequest) returns (UpdateResponse);

  rpc UpdateFollowers(UpdateFollowersRequest) returns (UpdateFollowersResponse);

  rpc UpdateResultTime(UpdateResultTimeRequest) returns (UpdateResultTimeResponse);

  rpc SetEnabledBatch(SetEnabledBatchRequest) returns (SetEnabledBatchResponse);

  rpc Delete(DeleteRequest) returns (DeleteResponse);

  rpc SearchOwn(SearchOwnRequest) returns (SearchOwnResponse);

  rpc Search(SearchRequest) returns (SearchResponse);

  rpc SearchByCondition(SearchByConditionRequest) returns (SearchByConditionResponse);
}

// Create

message CreateRequest {
  string description = 1;
  bool enabled = 2;
  Condition cond = 3;
  google.protobuf.Timestamp expires = 4;
  bool public = 5;
  string id = 6;
}

message Condition {
  bool not = 1;
  oneof cond {
    GroupCondition gc = 2;
    TextCondition tc = 3;
    NumberCondition nc = 4;
    SemanticCondition sc = 5;
  }
}

message GroupCondition {
  common.GroupLogic logic = 1;
  repeated Condition group = 2;
}

message TextCondition {
  string id = 1;
  string key = 2;
  string term = 3;
  bool exact = 4;
}

message NumberCondition {
  string id = 1;
  string key = 2;
  Operation op = 3;
  double val = 4;
}

message SemanticCondition {
  string id = 1;
  string query = 2;
}

enum Operation {
  Undefined = 0;
  Gt = 1;
  Gte = 2;
  Eq = 3;
  Lte = 4;
  Lt = 5;
}

message CreateResponse {
}

// Read

message ReadRequest {
  string id = 1;
  bool internal = 2;
}

message ReadResponse {
  string description = 1;
  bool enabled = 2;
  Condition cond = 3;
  google.protobuf.Timestamp expires = 4;
  google.protobuf.Timestamp created = 5;
  google.protobuf.Timestamp updated = 6;
  bool public = 7;
  int64 followers = 8;
  google.protobuf.Timestamp result = 9;
  bool own = 10; // deprecated
  string groupId = 11;
  string userId = 12;
  google.protobuf.Timestamp enabledSince = 13;
}

// Update

message UpdateRequest {
  string id = 1;
  string description = 2;
  bool enabled = 3;
  google.protobuf.Timestamp expires = 4;
  Condition cond = 5;
  bool public = 6;
}

message UpdateResponse {
  Condition cond = 1;
}

// UpdateFollowers

message UpdateFollowersRequest {
  string id = 1;
  int64 count = 2;
}

message UpdateFollowersResponse {
}

// UpdateLastResultTime

message UpdateResultTimeRequest {
  string id = 1;
  google.protobuf.Timestamp read = 4;
}

message UpdateResultTimeResponse {
}

// SetEnabledBatch

message SetEnabledBatchRequest {
  repeated string ids = 1;
  bool enabled = 2;
  google.protobuf.Timestamp enabledSince = 3;
}

message SetEnabledBatchResponse {
  int64 n = 1;
}

// Delete

message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  Condition cond = 1;
}

// SearchOwn

message SearchOwnRequest {
  string cursor = 1;
  uint32 limit = 2;
  Order order = 3;
  string pattern = 4;
  bool private = 5; // private interests only
}

enum Order {
  ASC = 0;
  DESC = 1;
}

message SearchOwnResponse {
  repeated string ids = 1;
}

// ReadByCondition

message SearchByConditionRequest {
  string condId = 1;
  uint32 limit = 2;
  string cursor = 3;
}

message SearchByConditionResponse {
  repeated SearchByConditionResult page = 1;
  google.protobuf.Timestamp expires = 2;
}

message SearchByConditionResult {
  string id = 1;
  Condition cond = 2;
}

// Search

message SearchRequest {
  Cursor cursor = 1;
  uint32 limit = 2;
  Order order = 3;
  string Pattern = 4;
  Sort sort = 5;
  bool all = 6;
}

message Cursor {
  string id = 1;
  int64 followers = 2;
  google.protobuf.Timestamp timeCreated = 3;
}

enum Sort {
  ID = 0;
  FOLLOWERS = 1;
  TIME_CREATED = 2;
}

message SearchResponse {
  repeated string ids = 1;
}
