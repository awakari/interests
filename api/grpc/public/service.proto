syntax = "proto3";

package awakari.subscriptions.public;

option go_package = "./api/grpc/public";

import "google/protobuf/empty.proto";
import "api/grpc/common/group_logic.proto";
import "api/grpc/common/condition_output.proto";

service Service {
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Read(ReadRequest) returns (ReadResponse);
  rpc UpdateMetadata(UpdateMetadataRequest) returns (google.protobuf.Empty);
  rpc Delete(DeleteRequest) returns (google.protobuf.Empty);
  rpc SearchOwn(SearchOwnRequest) returns (SearchOwnResponse);
}

// Create

message CreateRequest {
  Metadata md = 1;
  ConditionInput cond = 2;
}

// Metadata represents the mutable part of the Subscription data.
message Metadata {
  string description = 1;
  uint32 priority = 2;
}

// ConditionInput represents the Subscription routing Condition data that is immutable once Subscription is created.
message ConditionInput {
  bool not = 1;
  oneof cond {
    GroupConditionInput gc = 2;
    KiwiTreeConditionInput ktc = 3;
  }
}

message GroupConditionInput {
  common.GroupLogic logic = 1;
  repeated ConditionInput group = 2;
}

// marker type
message KiwiTreeConditionInput {
  string key = 1;
  string pattern = 2;
  bool partial = 3;
}

message CreateResponse {
  string id = 1;
}

// Read

message ReadRequest {
  string id = 1;
}

message ReadResponse {
  Metadata md = 1;
  common.ConditionOutput cond = 2;
}

// Update

message UpdateMetadataRequest {
  string id = 1;
  Metadata md = 2;
}

// Delete

message DeleteRequest {
  string id = 1;
}

// SearchByAccount

message SearchOwnRequest {
  string cursor = 1;
  uint32 limit = 2;
}

message SearchOwnResponse {
  repeated string ids = 1;
}
